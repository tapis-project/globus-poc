openapi: 3.0.3
info:
  title: Tapis Globus Proxy API
  description: The Tapis Globus Proxy API proxies calls to Globus coming from a Tapis service.
  version: '0.0.1'
  termsOfService: "https://tapis-project.org"
  contact:
    name: "Tapis Globux Proxy API - CICSupport"
    url: "https://tapis-project.org"
    email: "cicsupport@tacc.utexas.edu"
  license:
    name: 3-Clause BSD License
    url: 'https://opensource.org/licenses/BSD-3-Clause'
externalDocs:
  description: Tapis Project
  url: 'https://tapis-project.org'
servers:
  - url: 'http://localhost:8080/'
    description: Local test environment
    variables: {}
  - url: 'https://dev.develop.tapis.io/'
    description: Development environment
    variables: {}
security:
  - TapisJWT: []
tags:
  - name: General
    description: General service health
  - name: Auth
    description: Manage Globus authorization related actions.
  - name: File Operations
    description: Manage file resources. Operations are list, mkdir, rename and delete
  - name: Transfers
    description: Manage file transfers. Initiate, cancel and retrieve status.

# ------------------------------------------------------------------------------
# --- Paths -------------------------------------------------------------------
# ------------------------------------------------------------------------------
paths:

  # --- Paths for General -----------------------------------------------------
  '/v3/globus-proxy/healthcheck':
    get:
      tags:
        - General
      description: Health check.
      operationId: healthCheck
      responses:
        '200':
          description: Message received.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespBasic'
        '500':
          description: Server error.

  # --- Paths for Auth -----------------------------------------------------
  '/v3/globus-proxy/auth/url/{client_id}':
# Python SDK:
#import globus_sdk
#CLIENT_ID = "0259148a-8ae0-44b7-80b5-a4060e22223e"
#client = globus_sdk.NativeAppAuthClient(CLIENT_ID)
#client.oauth2_start_flow(refresh_tokens=True)
#authorize_url = client.oauth2_get_authorize_url()
#print("Please go to this URL and login: {0}".format(authorize_url))
    get:
      tags:
        - Auth
      summary: Return authorization URL given a client Id.
      description: |
        Given a Globus Client Id return the authorization URL that can be used by an end-user to
        authenticate and obtain a *Native App Authorization Code*.
      operationId: getAuthUrl
      parameters:
        - name: client_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ClientIdString'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespUrl'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespBasic'
        '500':
          description: Server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespBasic'
  '/v3/globus-proxy/auth/tokens/${auth_code}':
# Python SDK:
#auth_code = input("Please enter the code you get after login here: ").strip()
#token_response = client.oauth2_exchange_code_for_tokens(auth_code)
#globus_transfer_data = token_response.by_resource_server["transfer.api.globus.org"]
#TRANSFER_ACCESS_TOKEN = globus_transfer_data["access_token"]
#TRANSFER_REFRESH_TOKEN = globus_transfer_data["refresh_token"]
    get:
      tags:
        - Auth
      summary: Exchange authorization code for access and refresh tokens.
      description: |
        Exchange a Globus *Native App Authorization Code* for a pair of access and refresh tokens.
      operationId: getTokens
      parameters:
        - name: auth_code
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/AuthCodeString'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespAuthTokens'
        '500':
          description: Server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespBasic'

  '/v3/globus-proxy/auth/check_tokens/${endpoint_id}':
    # Python SDK:
    get:
      tags:
        - Auth
      summary: Check token pair and refresh as needed for given endpoint.
      description: |
        Given an endpoint and a pair of tokens refresh the pair as needed. Return the refreshed token pair
        which may be the same as the provided pair.
        Access and refresh tokens must be provided as query parameters.
      operationId: checkTokens
      parameters:
        - name: endpoint_id
          in: path
          description: Endpoint Id
          required: true
          schema:
            type: string
          example: "0259148a-8ae0-44b7-80b5-a4060e92de3e"
        - name: access_token
          in: query
          description: Globus transfer access token
          required: true
          schema:
            type: string
        - name: refresh_token
          in: query
          description: Globus transfer refresh token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespAuthTokens'
        '500':
          description: Server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespBasic'

  # --- Paths for File Operations -----------------------------------------------------
  '/v3/globus-proxy/ops/{endpoint_id}/{path}':
    get:
      tags:
        - File Operations
      summary: List files for endpoint at given path.
      description: |
        List files for an endpoint at given path relative to the default directory of the endpoint.
        Access and refresh tokens must be provided as query parameters.
      operationId: listFiles
      parameters:
        - name: endpoint_id
          in: path
          description: Endpoint Id
          required: true
          schema:
            type: string
          example: "0259148a-8ae0-44b7-80b5-a4060e92de3e"
        - name: path
          in: path
          description: Path relative to default directory of the endpoint
          required: true
          schema:
            type: string
          example: "/dirA/dirB/"
        - name: access_token
          in: query
          description: Globus transfer access token
          required: true
          schema:
            type: string
        - name: refresh_token
          in: query
          description: Globus transfer refresh token
          required: true
          schema:
            type: string
        - name: recurse
          in: query
          description: recursive listing
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: A list of files
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileListingResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespBasic'
        '500':
          description: Server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespBasic'
    delete:
      tags:
        - File Operations
      summary: Delete a file or directory on endpoint at path relative to default directory.
      description: |
        Delete a file or directory at path {path} relative to the default directory.
        Access and refresh tokens must be provided as query parameters.
      operationId: delete
      parameters:
        - name: endpoint_id
          in: path
          description: Endpoint Id
          required: true
          schema:
            type: string
          example: "0259148a-8ae0-44b7-80b5-a4060e92de3e"
        - name: path
          in: path
          description: Path relative to default directory of the endpoint
          required: true
          schema:
            type: string
          example: "/dirA/dirB/"
        - name: access_token
          in: query
          description: Globus transfer access token
          required: true
          schema:
            type: string
        - name: refresh_token
          in: query
          description: Globus transfer refresh token
          required: true
          schema:
            type: string
        - name: recurse
          in: query
          description: remove the directory and all subdirectories
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespBasic'
        '500':
          description: Server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespBasic'
  '/v3/globus-proxy/ops/{endpoint_id}/mkdir':
    post:
      tags:
        - File Operations
      summary: Create a directory
      description: |
        Create a directory on the endpoint. Path is relative to the endpoint default directory.
        Path must be specified in the request body.
        Access and refresh tokens must be provided as query parameters.
      operationId: makeDir
      parameters:
        - name: endpoint_id
          in: path
          description: Endpoint Id
          required: true
          schema:
            type: string
          example: "0259148a-8ae0-44b7-80b5-a4060e92de3e"
        - name: access_token
          in: query
          description: Globus transfer access token
          required: true
          schema:
            type: string
        - name: refresh_token
          in: query
          description: Globus transfer refresh token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReqMakeDir'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespBasic'
        '500':
          description: Server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespBasic'
  '/v3/globus-proxy/ops/{endpoint_id}/rename':
    post:
      tags:
        - File Operations
      summary: Rename a file or directory
      description: |
        Rename a file or directory on the endpoint. Paths are relative to the endpoint default directory.
        Source and destination paths must be specified in the request body.
        When renaming to a different parent directory, the parent directory of the new path must already exist.
        Access and refresh tokens must be provided as query parameters.
      operationId: makeDir
      parameters:
        - name: endpoint_id
          in: path
          description: Endpoint Id
          required: true
          schema:
            type: string
          example: "0259148a-8ae0-44b7-80b5-a4060e92de3e"
        - name: access_token
          in: query
          description: Globus transfer access token
          required: true
          schema:
            type: string
        - name: refresh_token
          in: query
          description: Globus transfer refresh token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReqRename'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespBasic'
        '400':
          description: Input error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespBasic'
        '404':
          description: Source path not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespBasic'
        '500':
          description: Server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespBasic'

  # --- Paths for Transfers -----------------------------------------------------
  '/v3/globus-proxy/transfers':
    post:
      tags:
        - Transfers
      summary: Initiate a task to transfer files from one endpoint to another
      description: |
        Create a task to transfer files from a source endpoint to a destination endpoint.
        File paths are relative to the endpoint default directories.
        Endpoints are activated as needed.
        Access and refresh tokens must be provided as query parameters.
      operationId: createTransferTask
      parameters:
        - name: access_token
          in: query
          description: Globus transfer access token
          required: true
          schema:
            type: string
        - name: refresh_token
          in: query
          description: Globus transfer refresh token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReqCreateTransfer'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespTransferTask'
        '500':
          description: Server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespBasic'
  '/v3/globus-proxy/transfers/{transfer_id}':
    get:
      tags:
        - Transfers
      summary: Retrieve a transfer task given the task Id.
      description: |
        Retrieve a transfer task given the task Id.
        Access and refresh tokens must be provided as query parameters.
      operationId: getTransferTask
      parameters:
        - name: task_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/TaskIdString'
        - name: access_token
          in: query
          description: Globus transfer access token
          required: true
          schema:
            type: string
        - name: refresh_token
          in: query
          description: Globus transfer refresh token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespTransferTask'
        '500':
          description: Server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespBasic'

# ------------------------------------------------------------------------------
# --- Components ---------------------------------------------------------------
components:
  securitySchemes:
    TapisJWT:
      type: apiKey
      description: Tapis signed JWT token authentication
      name: X-Tapis-Token
      in: header
  schemas:
    # ------------------------------------------------------------------------------
    # --- Model objects ------------------------------------------------------------
    # ------------------------------------------------------------------------------
    # --- TapisSystem ------------------------------------------------------------------
    TapisSystem:
      type: object
      properties:
        tenant:
          type: string
        id:
          $ref: '#/components/schemas/IdString'
        description:
          $ref: '#/components/schemas/DescriptionString'
        systemType:
          $ref: '#/components/schemas/SystemTypeEnum'
        owner:
          $ref: '#/components/schemas/UserNameApiDefaultString'
        host:
          $ref: '#/components/schemas/HostString'
        enabled:
          type: boolean
          default: true
        effectiveUserId:
          $ref: '#/components/schemas/UserNameApiDefaultString'
        defaultAuthnMethod:
          $ref: '#/components/schemas/AuthnEnum'
        authnCredential:
          $ref: '#/components/schemas/Credential'
        bucketName:
          type: string
        rootDir:
          $ref: '#/components/schemas/DirString'
        port:
          type: integer
          format: int32
        useProxy:
          type: boolean
          default: false
        proxyHost:
          $ref: '#/components/schemas/HostString'
        proxyPort:
          type: integer
          format: int32
        dtnSystemId:
          $ref: '#/components/schemas/IdString'
        dtnMountPoint:
          type: string
        dtnMountSourcePath:
          type: string
        isDtn:
          type: boolean
          default: false
        canExec:
          type: boolean
        canRunBatch:
          type: boolean
          default: false
        mpiCmd:
          type: string
          minLength: 1
          maxLength: 126
        jobRuntimes:
          type: array
          minItems: 1
          uniqueItems: true
          items:
            $ref: '#/components/schemas/JobRuntime'
        jobWorkingDir:
          $ref: '#/components/schemas/DirString'
        jobEnvVariables:
          type: array
          items:
            $ref: '#/components/schemas/KeyValuePair'
        jobMaxJobs:
          type: integer
          default: 2147483647
        jobMaxJobsPerUser:
          type: integer
          default: 2147483647
        batchScheduler:
          $ref: '#/components/schemas/SchedulerTypeEnum'
        batchLogicalQueues:
          type: array
          items:
            $ref: '#/components/schemas/LogicalQueue'
        batchDefaultLogicalQueue:
          $ref: '#/components/schemas/QueueNameString'
        batchSchedulerProfile:
          $ref: '#/components/schemas/IdString'
        jobCapabilities:
          type: array
          items:
            $ref: '#/components/schemas/Capability'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/TagString'
        notes:
          type: object
        importRefId:
          type: string
        uuid:
          type: string
          format: uuid
        deleted:
          type: boolean
        created:
          type: string
        updated:
          type: string
    # --- JobRuntime ------------------------------------------------------------------
    JobRuntime:
      type: object
      required:
        - runtimeType
      properties:
        runtimeType:
          $ref: '#/components/schemas/RuntimeTypeEnum'
        version:
          type: string
    # --- SchedulerProfile ------------------------------------------------------------------
    SchedulerProfile:
      type: object
      required:
        - name
        - moduleLoadCommand
      properties:
        tenant:
          type: string
        name:
          $ref: '#/components/schemas/IdString'
        description:
          $ref: '#/components/schemas/DescriptionString'
        owner:
          $ref: '#/components/schemas/UserNameApiDefaultString'
        moduleLoadCommand:
          type: string
          minLength: 1
        modulesToLoad:
          type: array
          items:
            type: string
            minLength: 1
        hiddenOptions:
          type: array
          items:
            $ref: '#/components/schemas/SchedulerHiddenOptionEnum'
    # --- LogicalQueue ------------------------------------------------------------------
    LogicalQueue:
      type: object
      required:
        - name
        - hpcQueueName
      properties:
        name:
          $ref: '#/components/schemas/QueueNameString'
        hpcQueueName:
          $ref: '#/components/schemas/QueueNameString'
        maxJobs:
          type: integer
          default: 2147483647
        maxJobsPerUser:
          type: integer
          default: 2147483647
        minNodeCount:
          type: integer
        maxNodeCount:
          type: integer
        minCoresPerNode:
          type: integer
        maxCoresPerNode:
          type: integer
        minMemoryMB:
          type: integer
        maxMemoryMB:
          type: integer
        minMinutes:
          type: integer
        maxMinutes:
          type: integer
    # --- Capability ------------------------------------------------------------------
    Capability:
      type: object
      required:
        - category
        - name
        - datatype
      properties:
        category:
          $ref: '#/components/schemas/CategoryEnum'
        name:
          type: string
        datatype:
          $ref: '#/components/schemas/DatatypeEnum'
        precedence:
          type: integer
        value:
          type: string
    # --- Credential ------------------------------------------------------------------
    Credential:
      type: object
      properties:
        authnMethod:
          $ref: '#/components/schemas/AuthnEnum'
        password:
          type: string
        privateKey:
          type: string
        publicKey:
          type: string
        accessKey:
          type: string
        accessSecret:
          type: string
        certificate:
          type: string
    # --- KeyValuePair -------------------------------------------------------
    KeyValuePair:
      type: object
      required:
        - key
      properties:
        key:
          type: string
          minLength: 1
        value:
          type: string
          default: ""

    # --- String types with constraints ------------------------------------
    ClientIdString:
      type: string
      example: "0259148a-8ae0-44b7-80b5-a4060e92dd3e"
      minLength: 1
    AuthCodeString:
      type: string
      example: "T0aymuUlUyLaOvvR58xxDCzycq5Cd3"
      minLength: 1
    TaskIdString:
      type: string
      minLength: 1
    HostString:
      type: string
      minLength: 1
      maxLength: 256
    IdString:
      type: string
      minLength: 1
      maxLength: 80
    UserNameString:
      type: string
      minLength: 1
      maxLength: 60
    UserNameApiDefaultString:
      type: string
      minLength: 1
      maxLength: 60
      default: "${apiUserId}"
    DescriptionString:
      type: string
      maxLength: 2048
    DirString:
      type: string
      minLength: 1
      maxLength: 4096
    TagString:
      type: string
      minLength: 1
      maxLength: 128
    QueueNameString:
      type: string
      minLength: 1
      maxLength: 128

    # -------------------------------------------------------------------------
    # --- Request objects -----------------------------------------------------
    # -------------------------------------------------------------------------
    ReqMakeDir:
      required:
        - path
      type: object
      properties:
        path:
          pattern: ^(?!.*\.\.).*
          type: string
          example: "/dirA/dirB"
    ReqRename:
      required:
        - source_path
        - destination_path
      type: object
      properties:
        source_path:
          pattern: ^(?!.*\.\.).*
          type: string
          example: "/dirA/file_old.txt"
        destination_path:
          pattern: ^(?!.*\.\.).*
          type: string
          example: "/dirA/file_new.txt"






    ReqPostSystem:
      type: object
      required:
        - id
        - systemType
        - host
        - defaultAuthnMethod
        - canExec
      properties:
        id:
          $ref: '#/components/schemas/IdString'
        description:
          $ref: '#/components/schemas/DescriptionString'
        systemType:
          $ref: '#/components/schemas/SystemTypeEnum'
        owner:
          type: string
        host:
          $ref: '#/components/schemas/HostString'
        enabled:
          type: boolean
          default: true
        effectiveUserId:
          $ref: '#/components/schemas/UserNameString'
        defaultAuthnMethod:
          $ref: '#/components/schemas/AuthnEnum'
        authnCredential:
          $ref: '#/components/schemas/ReqPostCredential'
        bucketName:
          type: string
        rootDir:
          $ref: '#/components/schemas/DirString'
        port:
          type: integer
          format: int32
        useProxy:
          type: boolean
          default: false
        proxyHost:
          $ref: '#/components/schemas/HostString'
        proxyPort:
          type: integer
          format: int32
        dtnSystemId:
          $ref: '#/components/schemas/IdString'
        dtnMountPoint:
          type: string
        dtnMountSourcePath:
          type: string
        isDtn:
          type: boolean
          default: false
        canExec:
          type: boolean
        canRunBatch:
          type: boolean
          default: false
        mpiCmd:
          type: string
          minLength: 1
          maxLength: 126
        jobRuntimes:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/JobRuntime'
        jobWorkingDir:
          $ref: '#/components/schemas/DirString'
        jobEnvVariables:
          type: array
          items:
            $ref: '#/components/schemas/KeyValuePair'
        jobMaxJobs:
          type: integer
        jobMaxJobsPerUser:
          type: integer
        batchScheduler:
          $ref: '#/components/schemas/SchedulerTypeEnum'
        batchLogicalQueues:
          type: array
          items:
            $ref: '#/components/schemas/LogicalQueue'
        batchDefaultLogicalQueue:
          $ref: '#/components/schemas/QueueNameString'
        batchSchedulerProfile:
          $ref: '#/components/schemas/IdString'
        jobCapabilities:
          type: array
          items:
            $ref: '#/components/schemas/Capability'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/TagString'
        notes:
          type: object
        importRefId:
          type: string
    ReqPutSystem:
      type: object
      properties:
        description:
          $ref: '#/components/schemas/DescriptionString'
        host:
          $ref: '#/components/schemas/HostString'
        effectiveUserId:
          $ref: '#/components/schemas/UserNameString'
        defaultAuthnMethod:
          $ref: '#/components/schemas/AuthnEnum'
        authnCredential:
          $ref: '#/components/schemas/ReqPostCredential'
        port:
          type: integer
          format: int32
        useProxy:
          type: boolean
          default: false
        proxyHost:
          $ref: '#/components/schemas/HostString'
        proxyPort:
          type: integer
          format: int32
        dtnSystemId:
          $ref: '#/components/schemas/IdString'
        dtnMountPoint:
          type: string
        dtnMountSourcePath:
          type: string
        canRunBatch:
          type: boolean
          default: false
        mpiCmd:
          type: string
          minLength: 1
          maxLength: 126
        jobRuntimes:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/JobRuntime'
        jobWorkingDir:
          $ref: '#/components/schemas/DirString'
        jobEnvVariables:
          type: array
          items:
            $ref: '#/components/schemas/KeyValuePair'
        jobMaxJobs:
          type: integer
        jobMaxJobsPerUser:
          type: integer
        batchScheduler:
          $ref: '#/components/schemas/SchedulerTypeEnum'
        batchLogicalQueues:
          type: array
          items:
            $ref: '#/components/schemas/LogicalQueue'
        batchDefaultLogicalQueue:
          $ref: '#/components/schemas/QueueNameString'
        batchSchedulerProfile:
          $ref: '#/components/schemas/IdString'
        jobCapabilities:
          type: array
          items:
            $ref: '#/components/schemas/Capability'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/TagString'
        notes:
          type: object
        importRefId:
          type: string
    ReqPatchSystem:
      type: object
      properties:
        description:
          $ref: '#/components/schemas/DescriptionString'
        host:
          $ref: '#/components/schemas/HostString'
        effectiveUserId:
          $ref: '#/components/schemas/UserNameString'
        defaultAuthnMethod:
          $ref: '#/components/schemas/AuthnEnum'
        port:
          type: integer
          format: int32
        useProxy:
          type: boolean
        proxyHost:
          $ref: '#/components/schemas/HostString'
        proxyPort:
          type: integer
          format: int32
        dtnSystemId:
          $ref: '#/components/schemas/IdString'
        dtnMountPoint:
          type: string
        dtnMountSourcePath:
          type: string
        canRunBatch:
          type: boolean
        mpiCmd:
          type: string
          minLength: 1
          maxLength: 126
        jobRuntimes:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/JobRuntime'
        jobWorkingDir:
          $ref: '#/components/schemas/DirString'
        jobEnvVariables:
          type: array
          items:
            $ref: '#/components/schemas/KeyValuePair'
        jobMaxJobs:
          type: integer
        jobMaxJobsPerUser:
          type: integer
        batchScheduler:
          $ref: '#/components/schemas/SchedulerTypeEnum'
        batchLogicalQueues:
          type: array
          items:
            $ref: '#/components/schemas/LogicalQueue'
        batchDefaultLogicalQueue:
          $ref: '#/components/schemas/QueueNameString'
        batchSchedulerProfile:
          $ref: '#/components/schemas/IdString'
        jobCapabilities:
          type: array
          items:
            $ref: '#/components/schemas/Capability'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/TagString'
        notes:
          type: object
        importRefId:
          type: string
    ReqPostCredential:
      type: object
      properties:
        password:
          type: string
        privateKey:
          type: string
        publicKey:
          type: string
        accessKey:
          type: string
        accessSecret:
          type: string
        certificate:
          type: string
    ReqPerms:
      type: object
      required:
        - permissions
      properties:
        permissions:
          type: array
          minItems: 1
          items:
            type: string
    ReqSearchSystems:
      type: object
      required:
        - search
      properties:
        search:
          type: array
          minItems: 1
          items:
            type: string
    ReqMatchConstraints:
      type: object
      required:
        - match
      properties:
        match:
          type: array
          minItems: 1
          items:
            type: string
    ReqPostSchedulerProfile:
      type: object
      required:
        - name
        - moduleLoadCommand
      properties:
        name:
          $ref: '#/components/schemas/IdString'
        description:
          $ref: '#/components/schemas/DescriptionString'
        owner:
          type: string
        moduleLoadCommand:
          type: string
          minLength: 1
        modulesToLoad:
          type: array
          items:
            type: string
            minLength: 1
        hiddenOptions:
          type: array
          items:
            $ref: '#/components/schemas/SchedulerHiddenOptionEnum'

    # -------------------------------------------------------------------------
    # --- Response objects ----------------------------------------------------
    # -------------------------------------------------------------------------
    RespBasic:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        version:
          type: string
        result:
          type: object
        metadata:
          type: object
    RespBoolean:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        version:
          type: string
        result:
          $ref: '#/components/schemas/ResultBoolean'
        metadata:
          type: object
    ResultBoolean:
      type: object
      properties:
        aBool:
          type: boolean
    RespNameArray:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        version:
          type: string
        result:
          $ref: '#/components/schemas/ResultNameArray'
        metadata:
          type: object
    ResultNameArray:
      type: object
      properties:
        names:
          type: array
          items:
            type: string
    RespChangeCount:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        version:
          type: string
        result:
          $ref: '#/components/schemas/ResultChangeCount'
        metadata:
          type: object
    ResultChangeCount:
      type: object
      properties:
        changes:
          type: integer
          format: int32
    RespUrl:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        version:
          type: string
        result:
          $ref: '#/components/schemas/ResultUrl'
        metadata:
          type: object
    ResultUrl:
      type: object
      properties:
        url:
          type: string
    RespAuthTokens:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        version:
          type: string
        result:
          $ref: '#/components/schemas/ResultAuthTokens'
        metadata:
          type: object
    ResultAuthTokens:
      type: object
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
#Please enter the code you get after login here: T0aymuUlUyLaOovR58xxDCzycq3Cd3
#token_response:
#  ============================================================================================
#  {
#    "auth.globus.org": {
#      "scope": "email profile openid",
#      "access_token": "AgYO4by6BKBjlBNmOVq2JMyJv2Pdn6qd1VKaYj4nYlyk1NpKKJsWCD1dJBl1JD50OrpN2B4lBBBwO2CVM7J36hrvDwSweNqc5Jzb",
#      "refresh_token": "Agjdle1w1VVvxdPlmq9zOGOaBlzYjGe5YYbmz0belBrkbaMPePIKUQJwylP5DekYKvOWgly82V95b61OnDy0gjV7dWy05",
#      "token_type": "Bearer",
#      "expires_at_seconds": 1643577990,
#      "resource_server": "auth.globus.org"
#    },
#    "transfer.api.globus.org": {
#      "scope": "urn:globus:auth:scope:transfer.api.globus.org:all",
#      "access_token": "Ag4g5YoNM9Q6lzJ8BwOaOoYOg8Jk0MWY32Ma9NY44ynnGbJKeqf7C86d0zpPmbzj1ezr2laxjgvjJNTjrMWzvIYNQ3",
#      "refresh_token": "AgeXpvEnovWX2M4XdXVVJv59jazn72YvvnMyj4kKG6x2qp4ovOiqUMD8eJ2Ny2kNyr9jlXJQ47pO7wNkbl8oJBMvWw9P7",
#      "token_type": "Bearer",
#      "expires_at_seconds": 1643577990,
#      "resource_server": "transfer.api.globus.org"
#    }
#  }
#  ============================================================================================
    RespFileList:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/ResultFileInfo'
        version:
          type: string
        metadata:
          type: object
    ResultFileInfo:
      type: object
      properties:
        type:
          type: string
        user:
          type: string
        group:
          type: string
        permissions:
          type: string
        lastModified:
          type: string
          format: date-time
        name:
          type: string
        path:
          type: string
        size:
          type: integer
          description: size in bytes
          format: int64
    RespTransferTask:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        version:
          type: string
        result:
          $ref: '#/components/schemas/ResultTransferTask'
        metadata:
          type: object
    ResultTransferTask:
      type: object
      properties:
?        ?????
        access_token:
          type: string
        refresh_token:
          type: string





    RespSystem:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        version:
          type: string
        result:
          $ref: '#/components/schemas/TapisSystem'
        metadata:
          type: object
    RespSystems:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        version:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/TapisSystem'
        metadata:
          type: object
          properties:
            recordCount:
              type: integer
            recordLimit:
              type: integer
            recordsSkipped:
              type: integer
            orderBy:
              type: string
            startAfter:
              type: string
            totalCount:
              type: integer
    RespCredential:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        version:
          type: string
        result:
          $ref: '#/components/schemas/Credential'
        metadata:
          type: object
    RespSchedulerProfile:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        version:
          type: string
        result:
          $ref: '#/components/schemas/SchedulerProfile'
        metadata:
          type: object
    RespSchedulerProfiles:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        version:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/SchedulerProfile'
        metadata:
          type: object
    # -------------------------------------------------------------------------
    # --- Enums ---------------------------------------------------------------
    # -------------------------------------------------------------------------
    SystemTypeEnum:
      type: string
      enum:
        - LINUX
        - S3
        - IRODS
        - GLOBUS
